/* CSS variables = each var is prefixed with  -- */

:root {
  --primary: #ddd; /* hex */
  --dark: #333;
  --light: #fff;
  --shadow: 0 5px 5px rgba(104, 104, 104, 0.8);
}
/* box-sizing: border-box; = for we use any padding or anything it doesn't effect with the width of the element */
html {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
  color: var(--dark);
}

body {
  background: #ccc;
  /* top-bottom & left-right */
  margin: 30px 50px;
  line-height: 1.4;
}
.btn {
  text-decoration: none;
  padding: 0.6rem 1.3rem;
  border: 0;
  background-color: var(--dark);
  color: var(--light);
}

img {
  /*  max-width: 100; = coz i wanna the images stay within their container */
  max-width: 100%;
}
.wrapper {
  display: grid;
  grid-gap: 20px;
}

.main-nav ul {
  /* ul has padding by default */
  padding: 0;
  display: grid;
  grid-gap: 20px;
  /* i want don't any bullets */
  list-style: none;

  grid-template-columns: repeat(4, 1fr);
}

.main-nav a {
  /* make uppercase */
  text-transform: uppercase;
  text-decoration: none;
  padding: 0.8rem;
  text-align: center;
  font-size: 1.1rem;
  box-shadow: var(--shadow);
  background: var(--primary);
  color: var(--dark);
  /* to occupy the space for whole column and it can't be any element inline with it  */
  display: block;
}

.main-nav a:hover {
  background: var(--dark);
  color: var(--light);
}

/* Section top container  */

.top-container {
  display: grid;
  grid-gap: 20px;
  grid-template-areas:
    " show-case show-case top-box-a"
    "  show-case show-case top-box-b";
}
.show-case {
  grid-area: show-case;
  background: url(./img/4.jpeg);
  background-size: cover;
  background-position: center;
  min-height: 26rem;
  /* if we do't add padding the content would be start from left edge therefore we need padding */
  padding: 3rem;
  display: flex;
  /*i need each element in line separete therefore i use flex-direction: column;  */
  flex-direction: column;
  align-items: start;
  justify-content: center;
  box-shadow: var(--shadow);
}
.show-case h1 {
  font-size: 2.7rem;
  margin-bottom: 0;
  color: var(--light);
}
.show-case p {
  font-size: 1.6rem;
  margin-top: 0;
  color: var(--light);
}
/* top-box is child from top-container and parent as well to (a, p, i) tags  */
.top-box {
  display: grid;
  justify-content: center;
  align-items: center;
  background: var(--primary);
  box-shadow: var(--shadow);
  padding: 1.3rem;
  font-size: 1.5rem;
}
.top-box-a {
  grid-area: top-box-a;
}

.top-box-b {
  grid-area: top-box-b;
}
.top-box-a a,
.top-box-b a {
  text-transform: uppercase;

  box-shadow: var(--shadow);
  background: var(--dark);
  color: var(--light);
}

.top-box-a a:hover,
.top-box-b a:hover {
  background: var(--light);
  color: var(--dark);
}

.top-box > .price {
  font-size: 1.8rem;
}

/* boxes section  */
.boxes {
  display: grid;
  grid-gap: 20px;

  /* to make more responsive if we add more boxes,with auto-fit can also add a new column automatically if the width is not large enough for boxes  ,to handle the column sizing and element wrapping for us so that the elements will wrap into rows when the width is not large enough to fit them in without any overflow  */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  /*   grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); */
}
.box {
  background: var(--primary);
  box-shadow: var(--shadow);
  text-align: center;
  padding: 1.2rem 0.8rem;
}

.info {
  display: grid;
  grid-gap: 2em;
  grid-template-columns: repeat(2, 1fr);
  padding: 3rem;
  background: var(--primary);
  box-shadow: var(--shadow);
  /*  text-align: center; */
}
.portfolio {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-gap: 20px;
}
.portfolio img {
  min-width: 100%;
  box-shadow: var(--shadow);
}

footer {
  margin-top: 3rem;
  text-align: center;
  padding: 0.7rem;
  background-color: var(--dark);
  color: var(--light);
}

footer > p {
  font-size: 1.3em;
}

.info-details a {
  box-shadow: var(--shadow);
  background: var(--dark);
  color: var(--light);
}

.info-details a:hover {
  background: var(--light);
  color: var(--dark);
}


